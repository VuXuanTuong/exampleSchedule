buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'maven-publish'

group = 'vn.gobiz'
sourceCompatibility = 1.8

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.boot:spring-boot-starter-actuator')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-quartz')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('org.springframework.boot:spring-boot-starter-undertow')
    runtime('org.springframework.boot:spring-boot-devtools')
    runtime('org.postgresql:postgresql')
    compile('com.zaxxer:HikariCP:3.1.0')
    compileOnly('org.springframework.boot:spring-boot-configuration-processor')
    compileOnly('org.projectlombok:lombok')
    testCompile('org.springframework.boot:spring-boot-starter-test')
    testCompile('io.projectreactor:reactor-test')

    compile('net.logstash.logback:logstash-logback-encoder:5.0')
    compile ('org.zalando:problem:0.20.2')
    compile ('org.zalando:jackson-datatype-problem:0.20.2')
}

configurations {
    compile.exclude module: 'spring-boot-starter-tomcat'
    compile.exclude module: 'spring-boot-starter-reactor-netty'
}


publishing {
    publications {
        bootJava(MavenPublication) {
            artifact bootJar
        }
    }
    repositories {
        maven {
            url System.getenv('NEXUS_REPO')?:'http://172.16.17.18:9981/repository/maven-snapshots/'
            credentials {
                username System.getenv('NEXUS_USERNAME')?:'admin'
                password System.getenv('NEXUS_PASSWORD')
            }
        }
    }
}

compileJava.dependsOn(processResources)
